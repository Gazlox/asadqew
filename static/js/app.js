// JavaScript –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å API
const API_BASE_URL = 'https://your-heroku-app.herokuapp.com'; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à API URL

class SportsAIAnalyzer {
    constructor() {
        this.initializeTelegram();
        this.setupEventListeners();
    }

    initializeTelegram() {
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
        if (window.Telegram && window.Telegram.WebApp) {
            window.Telegram.WebApp.ready();
            window.Telegram.WebApp.expand();
        }
    }

    setupEventListeners() {
        const uploadArea = document.getElementById('uploadArea');
        const fileInput = document.getElementById('fileInput');
        const analyzeBtn = document.getElementById('analyzeBtn');

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –ø–æ –æ–±–ª–∞—Å—Ç–∏ –∑–∞–≥—Ä—É–∑–∫–∏
        uploadArea.addEventListener('click', () => {
            fileInput.click();
        });

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞
        fileInput.addEventListener('change', (e) => {
            const file = e.target.files[0];
            if (file) {
                this.handleFileSelect(file);
            }
        });

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ drag & drop
        uploadArea.addEventListener('dragover', (e) => {
            e.preventDefault();
            uploadArea.classList.add('dragover');
        });

        uploadArea.addEventListener('dragleave', () => {
            uploadArea.classList.remove('dragover');
        });

        uploadArea.addEventListener('drop', (e) => {
            e.preventDefault();
            uploadArea.classList.remove('dragover');
            const file = e.dataTransfer.files[0];
            if (file) {
                this.handleFileSelect(file);
            }
        });

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞–Ω–∞–ª–∏–∑–∞
        analyzeBtn.addEventListener('click', () => {
            this.analyzeImage();
        });
    }

    handleFileSelect(file) {
        if (!file.type.startsWith('image/')) {
            this.showError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ');
            return;
        }

        if (file.size > 10 * 1024 * 1024) {
            this.showError('–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 10MB');
            return;
        }

        this.selectedFile = file;
        document.getElementById('analyzeBtn').disabled = false;
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–≤—å—é
        const reader = new FileReader();
        reader.onload = (e) => {
            const preview = document.createElement('img');
            preview.src = e.target.result;
            preview.className = 'preview-image';
            preview.id = 'preview';
            
            // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –ø—Ä–µ–≤—å—é
            const oldPreview = document.getElementById('preview');
            if (oldPreview) {
                oldPreview.remove();
            }
            
            document.getElementById('uploadArea').appendChild(preview);
        };
        reader.readAsDataURL(file);
    }

    async analyzeImage() {
        if (!this.selectedFile) return;

        this.showLoading();
        this.hideError();
        this.hideResult();

        try {
            const formData = new FormData();
            formData.append('image', this.selectedFile);

            // –î–ª—è GitHub Pages –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤–Ω–µ—à–Ω–∏–π API
            const response = await fetch(`${API_BASE_URL}/api/analyze`, {
                method: 'POST',
                body: formData
            });

            if (!response.ok) {
                throw new Error('–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è');
            }

            const data = await response.json();
            this.showResult(data);

        } catch (err) {
            // –ï—Å–ª–∏ API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ
            console.warn('API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ:', err);
            this.showDemoResult();
        } finally {
            this.hideLoading();
        }
    }

    showDemoResult() {
        const demoData = {
            predictions: [
                {
                    team: "–ö–æ–º–∞–Ω–¥–∞ A",
                    confidence: 78,
                    reason: "–û—Ç–ª–∏—á–Ω–∞—è —Ñ–æ—Ä–º–∞ –∏–≥—Ä–æ–∫–æ–≤, –≤—ã—Å–æ–∫–∞—è –º–æ—Ç–∏–≤–∞—Ü–∏—è"
                },
                {
                    team: "–ö–æ–º–∞–Ω–¥–∞ B", 
                    confidence: 65,
                    reason: "–•–æ—Ä–æ—à–∞—è —Ç–∞–∫—Ç–∏–∫–∞, –Ω–æ –µ—Å—Ç—å —Å–ª–∞–±—ã–µ –º–µ—Å—Ç–∞ –≤ –∑–∞—â–∏—Ç–µ"
                }
            ],
            betting_recommendations: [
                "üöÄ –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º —Å—Ç–∞–≤–∫—É –Ω–∞ –ö–æ–º–∞–Ω–¥—É A —Å –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–º 1.8+",
                "üìä –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –ø–µ—Ä–µ–¥ —Å—Ç–∞–≤–∫–æ–π",
                "üí∞ –ù–µ —Å—Ç–∞–≤—å—Ç–µ –±–æ–ª—å—à–µ 5% –æ—Ç –±–∞–Ω–∫–∞ –Ω–∞ –æ–¥–∏–Ω –º–∞—Ç—á"
            ]
        };
        this.showResult(demoData);
    }

    showLoading() {
        document.getElementById('loading').style.display = 'block';
        document.getElementById('analyzeBtn').disabled = true;
    }

    hideLoading() {
        document.getElementById('loading').style.display = 'none';
        document.getElementById('analyzeBtn').disabled = false;
    }

    showError(message) {
        const error = document.getElementById('error');
        error.textContent = message;
        error.style.display = 'block';
    }

    hideError() {
        document.getElementById('error').style.display = 'none';
    }

    showResult(data) {
        const predictions = document.getElementById('predictions');
        predictions.innerHTML = '';
        
        if (data.predictions && data.predictions.length > 0) {
            data.predictions.forEach(prediction => {
                const card = document.createElement('div');
                card.className = 'prediction-card';
                card.innerHTML = `
                    <div class="prediction-team">${prediction.team}</div>
                    <div class="prediction-confidence">–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å: ${prediction.confidence}%</div>
                    <div class="prediction-reason">${prediction.reason}</div>
                `;
                predictions.appendChild(card);
            });

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Å—Ç–∞–≤–∫–∞–º
            if (data.betting_recommendations) {
                const recommendations = document.createElement('div');
                recommendations.className = 'recommendations';
                recommendations.innerHTML = '<h4>üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Å—Ç–∞–≤–∫–∞–º:</h4>';
                
                data.betting_recommendations.forEach(rec => {
                    const recItem = document.createElement('div');
                    recItem.className = 'recommendation-item';
                    recItem.textContent = rec;
                    recommendations.appendChild(recItem);
                });
                
                predictions.appendChild(recommendations);
            }
        } else {
            predictions.innerHTML = '<div class="prediction-card">–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–æ–º–∞–Ω–¥—ã –Ω–∞ —Ñ–æ—Ç–æ</div>';
        }
        
        document.getElementById('result').style.display = 'block';
    }

    hideResult() {
        document.getElementById('result').style.display = 'none';
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
    new SportsAIAnalyzer();
});

